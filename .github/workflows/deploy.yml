name: Pipeline de Deploy

on:
  push:
    branches:
      - master

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do c√≥digo
      uses: actions/checkout@v2

    - name: Build da aplica√ß√£o
      run: npm install && CI=false npm run build

    - name: Testes
      run: npm test

    #- name: DAST
      # Execute o teste DAST aqui usando uma ferramenta como OWASP ZAP.
  
  owasp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v2

      - name: Verificar diret√≥rio atual
        run: echo ${{ github.workspace }}
    
      - name: Pull OWASP
        run: docker pull owasp/zap2docker-stable
    
      - name: Run ZAP API Scan
        run: |
          docker run -v ${{ github.workspace }}:/zap/wrk -u root -t owasp/zap2docker-stable zap-baseline.py -t ${URL2} -J /zap/wrk/report_json.json
        env:
          URL2: "https://gabrielsadrc.github.io/projeto-puc/" # Defina a URL da sua API aqui
    
      - name: Upload de artefatos
        uses: actions/upload-artifact@v2
        with:
          name: zap-reports
          path: /zap/wrk/report_json.json
          
  docker_upload:
    needs: owasp
    runs-on: ubuntu-latest
    steps:
    - name: Checkout do c√≥digo
      uses: actions/checkout@v2

    - name: Login no DockerHub
      run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build e Envio da imagem Docker
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/deploypuc:testeDeploy1 .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/deploypuc:testeDeploy1
  
  deploy:
    needs: docker_upload
    runs-on: ubuntu-latest
    steps:
    - name: Checkout do c√≥digo
      uses: actions/checkout@v2

    - name: Listar conte√∫do do diret√≥rio
      run: ls -la

    - name: Build
      run: npm install && CI=false npm run build

    - name: Deploy no GitHub Pages
      uses: crazy-max/ghaction-github-pages@v1
      with:
        target_branch: gh-pages
        build_dir: build
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
    
    - name: Notifica√ß√£o Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          üöÄ **Novo Deploy Realizado** üöÄ

          **Status do Build:** Conclu√≠do com sucesso
          **Vers√£o do Aplicativo:** 1.0.0
          **Link para o Projeto:** [Acessar Projeto](https://gabrielsadrc.github.io/projeto-puc/)

          ‚úÖ O deploy foi realizado com sucesso!

          üëè Parab√©ns √† equipe pelo excelente trabalho!
